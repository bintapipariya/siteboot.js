#!/bin/bash

## Fill in name of program here.
PROG="nodeservice"
PROG_PATH="/usr/bin" ## Not need, but sometimes helpful (if $PROG resides in /opt for example).
PROG_ARGS="10000000" 
PID_PATH="/tmp/"
PIDFILE=$PID_PATH/(`basename $CWD`).$PROG.pid
LOGFILE=$PROG.log
ERRFILE=$PROG.err

if [[ -e "$PIDFILE" ]]; then
	PID=`cat $PIDFILE`
	RUNNING=`ps -aux| awk '{print $2}' | grep $PID`
else
	RUNNING=""
fi 

echo "Running: $RUNNING"

start() {
	if [[ -n $RUNNING ]]; then
		## Program is running, exit with error.
		echo "Error! $PROG is currently running!" 1>&2
		exit 1
	else
		## Change from /dev/null to something like /var/log/$PROG if you want to save output.
		echo "STARTING SERVER..." >> $LOGFILE
		echo "STARTING SERVER..." >> $ERRFILE
		node server.js >> $LOGFILE 2>> $ERRFILE &
		echo "$!" > $PIDFILE
		echo "$PROG started, pid: $!"
	fi
}

stop() {
	if [[ -n $RUNNING ]]; then
		## Program is running, so stop it
		kill -9 `cat $PIDFILE`
		rm "$PIDFILE"
		echo "SERVER STOPPED!" >> $LOGFILE
		echo "SERVER STOPPED!" >> $ERRFILE
		echo "$PROG stopped"
	else
		## Program is not running, exit with error.
		echo "Error! $PROG not running!" 1>&2
		exit 1
	fi
}

reload() {
	if [[ -n $RUNNING ]]; then
		## Program is running, so stop it
		kill -s SIGHUP `cat $PIDFILE`
		echo "$PROG reloaded"
	else
		## Program is not running, exit with error.
		echo "Error! $PROG not running!" 1>&2
		exit 1
	fi
}
## Check to see if we are running as root first.
## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html


case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    reload|restart|force-reload)
        reload
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|reload}" 1>&2
        exit 1
    ;;
esac
